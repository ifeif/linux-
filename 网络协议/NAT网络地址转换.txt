NAT(Network Address Translation)网络地址转换服务：
	将内网的所有地址转换为同一个外网地址的不同端口,也承担着默认网关的责任
NAT的作用：
	电脑要网上就必须要有全球唯一的公网IP，才能定位和标识网络上的计算机资源。
	NAT解决了IPV4地址不够用的问题，将内网地址和外网地址区分开来，重复利用内网地址
基本原理：
	将内网的发送方的数据包的源地址改为NAT服务器公网口的地址并记录下内网发送方的源地址，代替内网的发送方访问外网。
	外网的接收方将数据包发回给源地址的NAT服务器，NAT服务器再根据之前的记录将目的地址改为内网的发送方的地址。
	NAT服务器代替内网主机监听端口，再把监听到的数据转发给内网主机的端口。
NAT的缺点：
	NAT解决了内网环境下多主机上网的问题，但是也造成了难以从外网访问内网主机的问题
总结：
	当内网访问外网时，NAT服务器记录下内网地址和外网地址的对应关系，数据包在下次返回时NAT服务器再根据之前的记录送回到内网发送方。
例子：
	内网发送方地址：192.168.1.1	网关(gw)：192.168.1.254
	外网接收方地址：1.1.1.10
	NAT服务器：
		内网卡：192.168.1.254
		外网卡：1.1.1.1
	所有内网发送来的数据包的源地址都将被替换为1.1.1.1，代替内网发送方的地址访问外网1.1.1.10。
内网可以访问外网，NAT服务器会记录下内网发送方的地址。
外网不能访问内网，NAT服务器会丢弃外网发送方的数据包。
在winserver中配置NAT服务的同时也可以配置DNS和DHCP服务，但只能以当前的主机作为DNS和DHCP服务器
NAT服务可以嵌套，可以搭建多层的NAT地址转换。只要是不同的网段内网(私有地址)，NAT服务器都会尝试去访问外网(大内网)。

开放外网用户访问内网：
原理:
在NAT服务器的外网卡(网口)上配置，添加外网口转换为内网口的映射表，当外网访问NAT服务器时，NAT服务器再根据映射表发送给内网。
外网用户只能通过NAT服务器的外网卡的地址访问内网。
端口映射：将外网的ip的某个端口映射到内网的ip的某个端口
地址映射：将外网的ip映射到内网的ip

静态NAT地址映射：
将局域网指定电脑的IP映射为相应的公网IP，公网IP需要向运营商申请。
由管理员手动添加地址映射表。如果内部网络有网页服务器为外部用户提供服务时，可以采用静态转换。
动态NAT地址映射：
定义一组公网地址池，内部主机与外界进行通信时，NAT服务器从地址池中选择一个未使用的公网地址进行映射。
每个转换条目在连接建立时动态生成，而在连接终止或在一定时间内没有通信时会被回收，有效地节约了公网地址。
当地址池中的所有地址都被占用时，下次的地址转换申请会被拒绝。

window网卡管理：
一台主机的默认网关只能有一个：
如果一个台主机有多张网卡，那么每张网卡只能配置一个相同的默认网关。
什么是桥接：
将两张网卡或两个接口桥接为一个逻辑局域网，相当于用一条网线连接这两张网卡
什么是Internet连接共享：
必须要有多张网卡才能设置Internet连接共享，它允许其他网卡通过该网卡连接Internet。

注：如果在家里的路由器搭建网页服务器，国内运营商默认把wan口的80、443、8080端口禁用了，需要找运营商备案才能开放，或者用别的端口。

VMware的NAT模式原理：
启动一台虚拟NAT服务器，将宿主机(物理机)的网卡作为外网卡，NAT服务器的内网卡则作为虚拟机内网的网关。
宿主机无法直接访问虚拟机内网，VMware默认添加了一张虚拟网卡连接到物理机，供宿主机访问虚拟机内网。
不通过VMware默认的虚拟网卡，宿主机也可以访问虚拟机内网，但要添加端口转发。
将物理机的网卡的某个端口映射到虚拟机内网的网卡的某个端口。
直接访问物理机的网卡就会转发到虚拟机内网的网卡。

DMZ隔离区：
将一部主机公开暴露在互联网上(意味着这台主机安全性差)，将公开的资源放在该主机上并与内网隔离开，所有访问路由器wan口公网ip的请求转发到该主机。
之所以叫这台主机为隔离区，是因为将公开的资源放在这台公开的主机上，而私有的资源放在其他主机上，这样就需要将不同的资源隔离开来。
如果有两层nat，下层路由器开启DMZ映射到主机IP，上层路由器也需要开启DMZ映射到下层路由器的IP，下层路由器的WAN口需要设为固定IP。
UPnP功能：
UPnP(Universal Plug and Play，通用即插即用)这个词是从计算机外设的即插即用(Plug-and-play)衍生而来的。即插即用是一种热拔插技术。UPnP基于TCP/IP协议和针对设备彼此间通讯而制订的新的Internet协议。
UPnP协议设计出来的目的是希望任何设备一旦连接上网络，所有在网络上的设备马上就能知道有新设备加入，这些设备彼此之间能互相通信，更能直接使用或者控制它，一切都不需要人工设置，完全的即插即用。
默认情况下，外网设备要想访问内网设备，必须要由内网设备先发起请求包，路由器会为内网设备动态产生一个随机端口，通过该端口发往外网设备，
外网设备发回相应包时也通过路由器的该端口发回，内网设备下一次再发起请求包时，将使用由路由器提供的另一个随机端口。
开启UPnP功能后，局域网中的设备可以请求路由器自动为其创建静态的端口映射。这样，互联网上的计算机就能在需要时直接访问局域网计算机上的资源。
由于路由器为该设备创建了专有(静态)的端口映射，所以该设备在使用多点下载方面的软件时，能够享受更加稳定的连接。
多点下载会通知多台设备将资源发送给同一个内网用户。为了提供安全性，不经常使用bt、p2p等下载软件建议关闭UPnP。
注：这里的路由器指开启NAT功能的路由器

NAT穿透：
既然内网可以主动联系上外网，那么是否可以先让内网主动联系外网，然后持续保持联系，
在保持联系的过程中外网不就能随时主动联系内网了，内网穿透的核心思想正是这个。
具体过程就是在NAT内网的主机向外网指定端口发送一个数据包，这样就会在NAT服务器上留下一个监听端口。
如果NAT服务器只记录端口，不记录内网主机访问的外网IP地址，那么其他主机只要知道了这个端口号和公网IP，
就可以间接通过NAT服务器的公网地址向内网主机主动发送数据包了。
双方NAT穿透：
架设一台公网服务器作为中转站(例如STUN服务器)，双方都向公网服务器发送一个包，确定自己的公网IP和端口号，并通过公网服务器发送给对方。
接着双方再向对方地址发送一个包，之后就可以实现穿透。
动态端口NAT：
当内网主机每次请求外网连接时，外网口的端口都会变化。(现在几乎所有的路由器都是使用动态端口NAT)
对称端口NAT：
内网口和外网口使用同一个端口，例如外网的8080端口转发给内网的8080端口。
NAT端口冲突：
默认情况下，内网主机访问外网时，主机的本地端口和NAT服务器的映射端口相同(对称)，当有两台主机同时占用NAT服务器公网的同一个端口，那么NAT服务器会选择一个未占用的端口分配给另一台主机。
例如NAT服务器后方(内网)有两台主机，主机A用1024端口连接网页服务器，主机也用1024端口连接网页服务器，
那么主机A的1024端口会映射到公网的1024端口，主机B的1024端口会映射到公网的1025端口。
NAT查询命令：
iptables -t nat --list	#列出nat端口映射表
netstat-nat -n	#该命令为NAT服务器特有，可以查询内网主机与外网主机的连接状态
什么是端口触发程序(拓展)：
当内网中的客户端对特定的端口请求向外连接时，端口触发程序在限定时间段内(如果别的主机没有请求触发端口)开启预置的内传端口，允许外网使用内传端口与指定的内网客户端通讯。
假设，对方web服务器的ip为110.110.110.110，触发端口为80，内传端口为21，内网客户端使用80端口向110.110.110.110连接成功时，会调用端口触发程序，暂时向外网开放21端口。
端口触发程序只适用于客户端发起请求，不适用于架设在路由器后方单纯提供服务的服务器，因为在接收传入数据前，它依靠特定的应用程序在触发端口产生一定流量后才能开启内传端口。
这适用于一些类型的网络游戏或P2P下载工具。因为直接使用端口转发的话，可能会造成一定的安全威胁(将自己的某些端口一直暴露在外网上)。
端口触发程序的优点是不需要指定静态内网IP，而是在内网主机成功访问"触发端口"的时候动态开放该内网主机的"内传端口"。同一时间内只能有一台内网主机请求触发端口。

内网穿透方法总结：
P2P：UDP打洞，需要非对称NAT，路由器基本都使用对称NAT，除非在自己公网IP上提供P2P穿透
VPN：要求内网内有公网ip主机(节点)，运行VPN服务端
DDNS：动态域名解析，需要动态公网IP
Port Forwarding：路由器设置端口转发，需要静态公网IP

参考资料：
https://blog.csdn.net/htxhtx123/article/details/106693076
https://blog.csdn.net/wyongqing/article/details/84496639
https://blog.csdn.net/jisuanji111111/article/details/122108226
https://product.pconline.com.cn/itbk/wlbg/network/1709/9971661.html