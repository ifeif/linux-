/etc/passwd 文件是系统用户配置文件，存储了系统中所有用户的基本信息。
由于该文件允许所有用户读取，易导致用户密码泄露，因此 Linux 系统将用户的密码信息从/etc/passwd文件中分离出来，并单独放到了此文件中。
/etc/shadow文件只有 root 用户拥有读权限，其他用户没有任何权限，这样就保证了用户密码的安全性。
/etc/shadow文件和/etc/passwd文件具有关联性，就跟人和自己的影子一样，所以称为影子文件；
/etc/shadow文件中每行代表一个用户，同样使用 ":" 作为分隔符，不同之处在于，每行用户信息被划分为 9 个字段。每个字段的含义如下：
用户名:加密密码:最后一次修改时间:最小修改时间间隔:密码有效期:密码需要变更前的警告天数:密码过期后的宽限时间:账号失效时间:保留字段

加密密码：
/etc/passwd文件中该字段为占位符x。
/etc/shadow文件保存的是真正加密的密文。目前 Linux 的密码采用的是 SHA512 散列加密算法，原来采用的是 MD5 或 DES 加密算法。SHA512 散列加密算法的加密等级更高，也更加安全。
"!!":表示密码过期，不能登录
"!":表示用户被锁定，不能登录
"*":表示系统用户，不能登录
"":表示密码为空，可以登陆
useradd命令-p参数可以指定用户的密文，passwd命令生加密后的密文并存放到/etc/passwd文件中。
SHA512算法的特点：
相同明文每次生成不同密文。
一个明文可以对应多个密文。
一个密文只对应一个明文。
linux系统统一使用SHA512算法，所以在一台主机上加密的密文，放在别的主机上依然能解密成相同明文。

最后一次修改时间：
此字段表示最后一次修改密码的时间，可是，为什么 root 用户显示的是 15775 呢？
这是因为，Linux 计算日期的时间是以  1970 年 1 月 1 日作为 1 不断累加得到的时间，到 1971 年 1 月 1 日，则为 366 天。这里显示 15775 天，也就是说，此 root 账号在 1970 年 1 月 1 日之后的第 15775 天修改的 root 用户密码。
那么，到底 15775 代表的是哪一天呢？可以使用如下命令进行换算：
[root@localhost ~]# date -d "1970-01-01 15775 days"
2013年03月11日 星期一 00:00:00 CST
可以看到，通过以上命令，即可将其换算为我们习惯的系统日期。

最小修改时间间隔：
最小修改间隔时间，也就是说，该字段规定了从第 3 字段(最后一次修改密码的日期)起，多长时间之内不能修改密码。如果是 0，则密码可以随时修改；如果是 10，则代表密码修改后 10 天之内不能再次修改密码。
此字段是为了针对某些人频繁更改账户密码而设计的。

密码有效期：
经常变更密码是个好习惯，为了强制要求用户变更密码，这个字段可以指定距离第 3 字段(最后一次更改密码)多长时间内需要再次变更密码，否则该账户密码进行过期阶段。
该字段的默认值为 99999，也就是 273 年，可认为是永久生效。如果改为 90，则表示密码被修改 90 天之后必须再次修改，否则该用户即将过期。管理服务器时，通过这个字段强制用户定期修改密码。

密码需要变更前的警告天数：
与第 5 字段相比较，当账户密码有效期快到时，系统会发出警告信息给此账户，提醒用户 "再过 n 天你的密码就要过期了，请尽快重新设置你的密码！"。
该字段的默认值是 7，也就是说，距离密码有效期的第 7 天开始，每次登录系统都会向该账户发出 "修改密码" 的警告信息。

密码过期后的宽限天数：
也称为“口令失效日”，简单理解就是，在密码过期后，用户如果还是没有修改密码，则在此字段规定的宽限天数内，用户还是可以登录系统的；如果过了宽限天数，系统将不再让此账户登陆，也不会提示账户过期，是完全禁用。

比如说，此字段规定的宽限天数是 10，则代表密码过期 10 天后失效；如果是 0，则代表密码过期后立即失效；如果是 -1，则代表密码永远不会失效。

账号失效时间：
同第 3 个字段一样，使用自  1970 年 1 月 1 日以来的总天数作为账户的失效时间。该字段表示，账号在此字段规定的时间之外，不论你的密码是否过期，都将无法使用！
该字段通常被使用在具有收费服务的系统中。

保留：
这个字段目前没有使用，等待新功能的加入。

忘记密码怎么办
经常有人忘记自己的账户密码，该怎么处理呢？
对于普通账户的密码遗失，可以通过 root 账户解决，它会重新给你配置好指定账户的密码，而不需知道你原有的密码(利用 root 的身份使用 passwd 命令即可)。
如果 root 账号的密码遗失，则需要重新启动进入单用户模式，系统会提供 root 权限的 bash 接口，此时可以用 passwd 命令修改账户密码；
也可以通过挂载根目录，修改 /etc/shadow，将账户的 root 密码清空的方法，此方式可使用 root 无法密码即可登陆，建议登陆后使用 passwd 命令配置 root 密码


SHA－512相关信息
安全Hash函数(SHA)是使用最广泛的Hash函数。由于其他曾被广泛使用的Hash函数都被发现存在安全隐患，从2005年至今，SHA或许是仅存的Hash算法标准。

SHA发展史
　　SHA由美国标准与技术研究所(NIST)设计并于1993年发表，该版本称为SHA-0，由于很快被发现存在安全隐患，1995年发布了SHA-1。
　　2002年，NIST分别发布了SHA-256、SHA-384、SHA-512，这些算法统称SHA-2。2008年又新增了SHA-224。
　　由于SHA-1已经不太安全，目前SHA-2各版本已成为主流。
