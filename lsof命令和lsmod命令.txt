lsof(list open files)命令可以列出当前系统中被进程打开(使用)的文件。root用户或其他用户所打开的文件需要root权限才能查看。
在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件。
lsof		#查看所有被进程打开的文件
lsof [文件名]	#查看哪个进程正在使用该文件
lsof [参数] [目录]	#查看哪个进程正在使用该目录下的文件(不包含子目录)
参数列表：
-c <进程名>	列出指定进程名所打开的文件
-p <进程号>	列出指定进程号所打开的文件
-u <用户名>	列出指定用户所打开的文件
-d <文件号>	列出指定文件描述符(FD)所打开的文件
+d <目录>  	列出指定目录下被打开的文件(不包含子目录)
+D <目录>	递归列出指定目录下被打开的文件
以上参数可以使用"lsof | grep 关键词"代替
-g [用户组ID]	列出指定用户组所打开的文件，不带组ID则显示PGID(进程所属用户组)
-r [时间]		每隔一个固定时间(以秒为单位)，自动刷新输出信息(执行命令)。默认为15秒
-i [条件]		列出符合条件的socket连接文件，不带条件则列出所有socket连接文件
条件参数详解：[协议类型@IP地址或主机名:端口号]
协议类型有4(IPv4)、6(IPv6)、tcp、udp
示例：lsof 4tcp@192.168.1.1:22
-n		以数字(ip地址)的形式显示socket连接(不显示主机名)
-N		列出系统正在使用的NFS文件
-s		显示文件大小，而不显示文件偏移量
-o		显示文件偏移量，而不显示文件大小
-h		显示帮助信息

lsof输出各列信息的意义如下：
COMMAND：文件所属的进程名称或执行该进程的命令
PID：进程标识符
PPID：父进程标识符(需要指定-R参数)
USER：进程所有者
PGID：进程所属用户组(需要指定-g参数)
FD：文件描述符，应用程序通过文件描述符识别该文件。类似windows的拓展名
TYPE：文件类型
DEVICE：设备ID
SIZE/OFF：文件的大小或文件偏移量(以字节为单位)
NODE：索引节点，文件在磁盘上的标识(inode号)
NAME：文件的路径或socket连接

FD文件描述符有：
	cwd：应用程序当前工作目录，这是该应用程序启动的目录，除非它本身对这个目录进行更改
	txt：该类型的文件是程序代码，如应用程序二进制文件本身或共享库，如/sbin/init 程序
	lnn：库引用（AIX）
	err：FD 信息错误
	jld：监狱目录（FreeBSD）
	ltx：共享库文本（代码和数据）
	mxx：十六进制内存映射类型号 xx
	m86：DOS合并映射文件
	mem：内存映射文件
	mmap：内存映射设备
	pd：父目录
	rtd：根目录
	tr：内核跟踪文件（OpenBSD）
	v86：VP/ix 映射文件
	0：标准输出
	1：标准输入
	2：标准错误
文件描述符后一般还跟着文件状态模式：
	r：只读模式
	w：写入模式
	u：读写模式
	空格：文件的状态模式为unknow，且没有锁定
	-：文件的状态模式为unknow，且被锁定
同时在文件状态模式后面，还跟着相关的锁：
	N：对于未知类型的 Solaris NFS 锁
	r：文件部分的读锁
	R：整个文件的读锁
	w：文件的部分写锁
	W：整个文件的写锁
	u：任何长度的读写锁
	U：用于未知类型的锁
	x：用于部分文件上的 SCO OpenServer Xenix 锁
	X：用于整个文件上的 SCO OpenServer Xenix 锁
	space：无锁

TYPE常见的文件类型有：
	REG：普通文件
	DIR：表示目录
	CHR：表示字符类型
	BLK：块设备类型
	UNIX：UNIX 域套接字
	FIFO：先进先出(FIFO)队列
	IPv4：IPv4 套接字
